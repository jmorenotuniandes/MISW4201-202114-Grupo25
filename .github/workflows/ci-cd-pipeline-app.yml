# Github actions for CI and CD workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Ionic Angular and Python application

on:
  push:
    branches: [ main, feature/** ]
  pull_request:
    types:
      - assigned
      - unassigned
      - labeled
      - unlabeled
      - synchronize
      - opened
      - edited
      - ready_for_review
      - reopened
      - unlocked
    branches: [ develop, release, main ]

jobs:
  build:
    name: CI-Backend
    runs-on: ubuntu-latest
    steps:
    - name: Repository checkout
      uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r flaskr/requirements.txt
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Unit test python
      run: |
        pytest

    - name: pruebas+coverage
      id: pruebas
      run: | 
        python -m coverage run -m unittest discover tests 
        python -m coverage xml -i

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build1:
    name: CI-Frontend
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - name: Repository checkout
      uses: actions/checkout@v2
    - name: Setup node
      uses: actions/setup-node@v2
    - name: npm install
      run: |
        # move to front-end folder
        cd front-end/tutorial-canciones
        # install dependences
        npm install
        # angular install
        npm install -g @angular/cli

  build2:
    name: CD-AWS
    needs: [build, build1]
    runs-on: ubuntu-latest
    steps:
      - name: Mensaje
        if: ${{ success() }}
        env:
          MENSAJE_EXITO: DESPLIEGUE PRODUCCIÃ“N
        run: echo "::set-output name=respuesta::${MENSAJE_EXITO}"



